/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainFrame;

import employee.Employee;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ekaterina
 */
public class MainFrame extends javax.swing.JFrame {

	/**
	 * Creates new form MainFrame
	 */
	public MainFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        About = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        AboutText = new javax.swing.JTextArea();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        searchTextField = new javax.swing.JTextField();
        Scroll = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchLabel = new javax.swing.JLabel();
        employeeInfo = new javax.swing.JLabel();
        ToolBar = new javax.swing.JToolBar();
        openButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        uniteButton = new javax.swing.JButton();
        find = new javax.swing.JButton();
        back = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        unite = new javax.swing.JMenuItem();
        create = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        About.setVisible(true);

        AboutText.setEditable(false);
        AboutText.setColumns(20);
        AboutText.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        AboutText.setRows(5);
        AboutText.setText("Федеральное государственное бюджетное образовательное учреждение высшего образования\n\t\tСанкт-Петербургский государственный университет телекоммуникаций\n\t\t\tим. проф. М.А. Бонч-Бруевича\n\n\n\n\n                          Курсовая работа по дисциплине:\n                    Объектно ориентированное программирование\n\n\n                                                              подготовила \n                                        \tСтудентка гр.ИКПИ-61 \n\t\t\t\t\t\tБаягантаева Е.В\n\t\t\t\t\t\tПроверил Коробов С.А.\n\n\n\n\n\n                                Сантк-Петербург\n                                     2017 г.");
        jScrollPane2.setViewportView(AboutText);

        javax.swing.GroupLayout AboutLayout = new javax.swing.GroupLayout(About.getContentPane());
        About.getContentPane().setLayout(AboutLayout);
        AboutLayout.setHorizontalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        AboutLayout.setVerticalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Database");
        setBackground(new java.awt.Color(153, 255, 204));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 255, 255));

        Scroll.setBackground(new java.awt.Color(255, 255, 255));
        Scroll.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Scroll.setForeground(new java.awt.Color(255, 255, 255));
        Scroll.setInheritsPopupMenu(true);

        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Имя", "Фамилия", "Должность", "Зарплата", "Стаж"
            }
        ));
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        Scroll.setViewportView(jTable1);

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchLabel.setText("Search:");

        employeeInfo.setText("The Employee Information:");

        ToolBar.setBackground(new java.awt.Color(255, 255, 255));
        ToolBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ToolBar.setForeground(new java.awt.Color(255, 255, 255));
        ToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);

        openButton.setBackground(new java.awt.Color(204, 204, 204));
        openButton.setForeground(new java.awt.Color(204, 204, 204));
        openButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/OpenDB.png"))); // NOI18N
        openButton.setToolTipText("To Open existing file click here");
        openButton.setFocusable(false);
        openButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        ToolBar.add(openButton);

        saveButton.setBackground(new java.awt.Color(204, 204, 204));
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/Save.png"))); // NOI18N
        saveButton.setToolTipText("To save file clic here");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        ToolBar.add(saveButton);

        createButton.setBackground(new java.awt.Color(204, 204, 204));
        createButton.setForeground(new java.awt.Color(204, 204, 204));
        createButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/MakeFile.png"))); // NOI18N
        createButton.setToolTipText("To create new file click here");
        createButton.setFocusable(false);
        createButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        createButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        ToolBar.add(createButton);

        uniteButton.setBackground(new java.awt.Color(204, 204, 204));
        uniteButton.setForeground(new java.awt.Color(204, 204, 204));
        uniteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/Unit.png"))); // NOI18N
        uniteButton.setToolTipText("To combine a few bases clic here");
        uniteButton.setFocusable(false);
        uniteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        uniteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        uniteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniteButtonActionPerformed(evt);
            }
        });
        ToolBar.add(uniteButton);

        find.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/Search.png"))); // NOI18N
        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainFrame/Back.png"))); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        menu.setBackground(new java.awt.Color(102, 255, 102));
        menu.setForeground(new java.awt.Color(153, 255, 153));

        file.setText("File");

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open.setText("Open existing file");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        file.add(open);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        save.setText("Save file as");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        file.add(save);

        unite.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        unite.setText("Unite separate data bases");
        unite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniteActionPerformed(evt);
            }
        });
        file.add(unite);

        create.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        create.setText("Create new");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        file.add(create);

        menu.add(file);

        help.setText("Help");

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        help.add(jMenuItem3);

        menu.add(help);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(searchTextField)
                        .addGap(18, 18, 18)
                        .addComponent(find)
                        .addGap(18, 18, 18)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(employeeInfo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Scroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchLabel)
                            .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(employeeInfo)
                .addGap(18, 18, 18)
                .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 367, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	ArrayList<String> Data = new ArrayList<>();
	ArrayList<Employee> EmployeeData = new ArrayList<>();
		
        public void saveToFile(){
			JFileChooser fc = new JFileChooser();//открытие диалог. окна
			if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
				try (FileWriter fw = new FileWriter(fc.getSelectedFile())) {
					for (int row = 0; row < jTable1.getRowCount(); row++) {
						for (int col = 0; col < jTable1.getColumnCount(); col++) {
							if ((String) jTable1.getValueAt(row, col) != null) {
								fw.write((String) jTable1.getValueAt(row, col) + "\n");
							} else {
								fw.write("");
							}
						}
					}
				} catch (IOException e) {
					System.out.println("Ошибка!");
				}
			}
		}
        
        public void openFile(){
			JFileChooser fileopen = new JFileChooser();
			int ret = fileopen.showDialog(null, "Открыть файл");
			File inputFile = fileopen.getSelectedFile();
			try {
				FileInputStream fstream = new FileInputStream(inputFile);
				BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
				String strLine;
				while ((strLine = br.readLine()) != null) {
					Data.add(strLine);
				}
                                
				for (int i = 0; i < Data.size(); i++) {
					String name = Data.get(i);
					i++;
					String scndName = Data.get(i);
					i++;
					String post = Data.get(i);
					i++;
					String salary = Data.get(i);
					i++;
					String experience = Data.get(i);
					Employee person = new Employee(name, scndName, post, salary, experience);
					EmployeeData.add(person);
				}
				int i = 0;
				int k = 0;

				for (int row = 0; row < jTable1.getRowCount(); row++) {

					Employee bufperson;
					for (int col = 0; col < jTable1.getColumnCount(); col++) {
						bufperson = EmployeeData.get(k);
						jTable1.setValueAt(bufperson.name, row, col);
						col++;
						jTable1.setValueAt(bufperson.scndName, row, col);
						col++;
						jTable1.setValueAt(bufperson.post, row, col);
						col++;
						jTable1.setValueAt(bufperson.salary, row, col);
						col++;
						jTable1.setValueAt(bufperson.experience, row, col);
						col++;
						i++;
						k++;
					}
				}
			} catch (IOException e) {
				System.out.println("Ошибка");
			}
		}
        
    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed

			saveToFile();
			Data.clear();
			EmployeeData.clear();
			jTable1.removeAll();
			for (int i = 0; i < jTable1.getRowCount(); i++) {
				for (int j = 0; j < jTable1.getColumnCount(); j++) {
					jTable1.setValueAt(null, i, j);
				}
			}
			openFile();

    }//GEN-LAST:event_openActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
			// TODO add your handling code here:
			saveToFile();
    }//GEN-LAST:event_saveActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
			// TODO add your handling code here:
			final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
			jTable1.setRowSorter(sorter);
			String text = searchTextField.getText();
			if (text.length() == 0) {
				sorter.setRowFilter(null);
			} else {
				sorter.setRowFilter(RowFilter.regexFilter(text));
			}

    }//GEN-LAST:event_findActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
			AboutText.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void uniteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniteActionPerformed
			JFileChooser fileun = new JFileChooser();
			int ret = fileun.showDialog(null, "Добавить файл");
			File inputFile = fileun.getSelectedFile();
			try {
				FileInputStream Unstream = new FileInputStream(inputFile);
				BufferedReader Unbr = new BufferedReader(new InputStreamReader(Unstream));
                                int Dsize = Data.size();
				String strLine;
				while ((strLine = Unbr.readLine()) != null) {
					Data.add(strLine);
				}
				for (int i = Dsize; i < Data.size(); i++) {
					String name = Data.get(i);
					i++;
					String scndName = Data.get(i);
					i++;
					String post = Data.get(i);
					i++;
					String salary = Data.get(i);
					i++;
					String experience = Data.get(i);
					Employee person = new Employee(name, scndName, post, salary, experience);
					EmployeeData.add(person);
				}
				int i = 0;
				int k = 0;

				for (int row = 0; row < jTable1.getRowCount(); row++) {
					Employee bufperson;
					for (int col = 0; col < jTable1.getColumnCount(); col++) {
						bufperson = EmployeeData.get(k);
						jTable1.setValueAt(bufperson.name, row, col);
						col++;
						jTable1.setValueAt(bufperson.scndName, row, col);
						col++;
						jTable1.setValueAt(bufperson.post, row, col);
						col++;
						jTable1.setValueAt(bufperson.salary, row, col);
						col++;
						jTable1.setValueAt(bufperson.experience, row, col);
						col++;
						i++;
						k++;
					}
				}
			} catch (IOException e) {
				System.out.println("Ошибка");
			}
    }//GEN-LAST:event_uniteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
			// TODO add your handling code here:
			searchTextField.setText("");
			final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
			jTable1.setRowSorter(sorter);
			String text = searchTextField.getText();
			if (text.length() == 0) {
				sorter.setRowFilter(null);
			} else {
				sorter.setRowFilter(RowFilter.regexFilter(text));
			}

    }//GEN-LAST:event_backActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
			// TODO add your handling code here:
			saveToFile();
			Data.clear();
			EmployeeData.clear();
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
				for (int j = 0; j < jTable1.getColumnCount(); j++) {
					jTable1.setValueAt(null, i, j);
				}
			}

			jTable1.removeAll();
    }//GEN-LAST:event_createActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
			// TODO add your handling code here:
			saveToFile();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
			// TODO add your handling code here:
			saveToFile();
			Data.clear();
			EmployeeData.clear();
			jTable1.removeAll();
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
				for (int j = 0; j < jTable1.getColumnCount(); j++) {
					jTable1.setValueAt(null, i, j);
				}
			}

    }//GEN-LAST:event_createButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
			// TODO add your handling code here:
			saveToFile();
			Data.clear();
			EmployeeData.clear();
			jTable1.removeAll();
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
				for (int j = 0; j < jTable1.getColumnCount(); j++) {
					jTable1.setValueAt(null, i, j);
				}
			}

			openFile();


    }//GEN-LAST:event_openButtonActionPerformed

    private void uniteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniteButtonActionPerformed
			// TODO add your handling code here:
			JFileChooser fileun = new JFileChooser();
			int ret = fileun.showDialog(null, "Добавить файл");
			File inputFile = fileun.getSelectedFile();
			try {
				FileInputStream Unstream = new FileInputStream(inputFile);
				BufferedReader Unbr = new BufferedReader(new InputStreamReader(Unstream));
				String strLine;
				int Dsize = Data.size();
				while ((strLine = Unbr.readLine()) != null) {
					Data.add(strLine);
				}
				for (int i = Dsize; i < Data.size(); i++) {
					String name = Data.get(i);
					i++;
					String scndName = Data.get(i);
					i++;
					String post = Data.get(i);
					i++;
					String salary = Data.get(i);
					i++;
					String experience = Data.get(i);
					Employee person = new Employee(name, scndName, post, salary, experience);
					EmployeeData.add(person);
				}
				int i = 0;
				int k = 0;
                                
				for (int row = 0; row < jTable1.getRowCount(); row++) {
					Employee bufperson;
					for (int col = 0; col < jTable1.getColumnCount(); col++) {
						bufperson = EmployeeData.get(k);
						jTable1.setValueAt(bufperson.name, row, col);
						col++;
						jTable1.setValueAt(bufperson.scndName, row, col);
						col++;
						jTable1.setValueAt(bufperson.post, row, col);
						col++;
						jTable1.setValueAt(bufperson.salary, row, col);
						col++;
						jTable1.setValueAt(bufperson.experience, row, col);
						col++;
						i++;
						k++;
					}
				}
			} catch (IOException e) {
				System.out.println("Ошибка");
			}
    }//GEN-LAST:event_uniteButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
			new MainFrame().setVisible(true);
		});

	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame About;
    private javax.swing.JTextArea AboutText;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton back;
    private javax.swing.JMenuItem create;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel employeeInfo;
    private javax.swing.JMenu file;
    private javax.swing.JButton find;
    private javax.swing.JMenu help;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem open;
    private javax.swing.JButton openButton;
    private javax.swing.JMenuItem save;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JMenuItem unite;
    private javax.swing.JButton uniteButton;
    // End of variables declaration//GEN-END:variables
}
